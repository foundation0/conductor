import{a as c,L as h,P as v,__tla as N}from"./index-77360db5.js";let p,b,d,j=Promise.all([(()=>{try{return N}catch{}})()]).then(async()=>{d=class extends c{get inputKeys(){return[this.inputKey,...this.llmChain.inputKeys]}get outputKeys(){return this.llmChain.outputKeys}constructor(e){super(e),Object.defineProperty(this,"llmChain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"inputKey",{enumerable:!0,configurable:!0,writable:!0,value:"input_documents"}),Object.defineProperty(this,"documentVariableName",{enumerable:!0,configurable:!0,writable:!0,value:"context"}),this.llmChain=e.llmChain,this.documentVariableName=e.documentVariableName??this.documentVariableName,this.inputKey=e.inputKey??this.inputKey}async _call(e,t){if(!(this.inputKey in e))throw new Error(`Document key ${this.inputKey} not found.`);const{[this.inputKey]:a,...n}=e,i=a.map(({pageContent:r})=>r).join(`

`);return await this.llmChain.call({...n,[this.documentVariableName]:i},t==null?void 0:t.getChild())}_chainType(){return"stuff_documents_chain"}static async deserialize(e){if(!e.llm_chain)throw new Error("Missing llm_chain");return new d({llmChain:await h.deserialize(e.llm_chain)})}serialize(){return{_type:this._chainType(),llm_chain:this.llmChain.serialize()}}},p=class extends c{get inputKeys(){return[this.inputKey,...this.combineDocumentChain.inputKeys]}get outputKeys(){return this.combineDocumentChain.outputKeys}constructor(e){super(e),Object.defineProperty(this,"llmChain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"inputKey",{enumerable:!0,configurable:!0,writable:!0,value:"input_documents"}),Object.defineProperty(this,"documentVariableName",{enumerable:!0,configurable:!0,writable:!0,value:"context"}),Object.defineProperty(this,"returnIntermediateSteps",{enumerable:!0,configurable:!0,writable:!0,value:!1}),Object.defineProperty(this,"maxTokens",{enumerable:!0,configurable:!0,writable:!0,value:3e3}),Object.defineProperty(this,"maxIterations",{enumerable:!0,configurable:!0,writable:!0,value:10}),Object.defineProperty(this,"ensureMapStep",{enumerable:!0,configurable:!0,writable:!0,value:!1}),Object.defineProperty(this,"combineDocumentChain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.llmChain=e.llmChain,this.combineDocumentChain=e.combineDocumentChain,this.documentVariableName=e.documentVariableName??this.documentVariableName,this.ensureMapStep=e.ensureMapStep??this.ensureMapStep,this.inputKey=e.inputKey??this.inputKey,this.maxTokens=e.maxTokens??this.maxTokens,this.maxIterations=e.maxIterations??this.maxIterations,this.returnIntermediateSteps=e.returnIntermediateSteps??!1}async _call(e,t){if(!(this.inputKey in e))throw new Error(`Document key ${this.inputKey} not found.`);const{[this.inputKey]:a,...n}=e;let i=a,r=[];for(let o=0;o<this.maxIterations;o+=1){const y=i.map(s=>({[this.documentVariableName]:s.pageContent,...n})),w=y.map(async s=>{const m=await this.llmChain.prompt.format(s);return this.llmChain.llm.getNumTokens(m)}),C=await Promise.all(w).then(s=>s.reduce((m,P)=>m+P,0)),g=o!==0||!this.ensureMapStep,K=C<this.maxTokens;if(g&&K)break;const f=await this.llmChain.apply(y,t?[t.getChild()]:void 0),{outputKey:_}=this.llmChain;this.returnIntermediateSteps&&(r=r.concat(f.map(s=>s[_]))),i=f.map(s=>({pageContent:s[_]}))}const l={input_documents:i,...n},u=await this.combineDocumentChain.call(l,t==null?void 0:t.getChild());return this.returnIntermediateSteps?{...u,intermediateSteps:r}:u}_chainType(){return"map_reduce_documents_chain"}static async deserialize(e){if(!e.llm_chain)throw new Error("Missing llm_chain");if(!e.combine_document_chain)throw new Error("Missing combine_document_chain");return new p({llmChain:await h.deserialize(e.llm_chain),combineDocumentChain:await c.deserialize(e.combine_document_chain)})}serialize(){return{_type:this._chainType(),llm_chain:this.llmChain.serialize(),combine_document_chain:this.combineDocumentChain.serialize()}}},b=class extends c{get defaultDocumentPrompt(){return new v({inputVariables:["page_content"],template:"{page_content}"})}get inputKeys(){return[this.inputKey,...this.refineLLMChain.inputKeys]}get outputKeys(){return[this.outputKey]}constructor(e){super(e),Object.defineProperty(this,"llmChain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"inputKey",{enumerable:!0,configurable:!0,writable:!0,value:"input_documents"}),Object.defineProperty(this,"outputKey",{enumerable:!0,configurable:!0,writable:!0,value:"output_text"}),Object.defineProperty(this,"documentVariableName",{enumerable:!0,configurable:!0,writable:!0,value:"context"}),Object.defineProperty(this,"initialResponseName",{enumerable:!0,configurable:!0,writable:!0,value:"existing_answer"}),Object.defineProperty(this,"refineLLMChain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"documentPrompt",{enumerable:!0,configurable:!0,writable:!0,value:this.defaultDocumentPrompt}),this.llmChain=e.llmChain,this.refineLLMChain=e.refineLLMChain,this.documentVariableName=e.documentVariableName??this.documentVariableName,this.inputKey=e.inputKey??this.inputKey,this.outputKey=e.outputKey??this.outputKey,this.documentPrompt=e.documentPrompt??this.documentPrompt,this.initialResponseName=e.initialResponseName??this.initialResponseName}async _constructInitialInputs(e,t){const a={page_content:e.pageContent,...e.metadata},n={};return this.documentPrompt.inputVariables.forEach(i=>{n[i]=a[i]}),{[this.documentVariableName]:await this.documentPrompt.format({...n}),...t}}async _constructRefineInputs(e,t){const a={page_content:e.pageContent,...e.metadata},n={};this.documentPrompt.inputVariables.forEach(r=>{n[r]=a[r]});const i={[this.documentVariableName]:await this.documentPrompt.format({...n})};return{[this.initialResponseName]:t,...i}}async _call(e,t){if(!(this.inputKey in e))throw new Error(`Document key ${this.inputKey} not found.`);const{[this.inputKey]:a,...n}=e,i=a,r=await this._constructInitialInputs(i[0],n);let l=await this.llmChain.predict({...r},t==null?void 0:t.getChild());for(let u=1;u<i.length;u+=1){const o={...await this._constructRefineInputs(i[u],l),...n};l=await this.refineLLMChain.predict({...o},t==null?void 0:t.getChild())}return{[this.outputKey]:l}}_chainType(){return"refine_documents_chain"}static async deserialize(e){const t=e.llm_chain;if(!t)throw new Error("Missing llm_chain");const a=e.refine_llm_chain;if(!a)throw new Error("Missing refine_llm_chain");return new b({llmChain:await h.deserialize(t),refineLLMChain:await h.deserialize(a)})}serialize(){return{_type:this._chainType(),llm_chain:this.llmChain.serialize(),refine_llm_chain:this.refineLLMChain.serialize()}}}});export{p as MapReduceDocumentsChain,b as RefineDocumentsChain,d as StuffDocumentsChain,j as __tla};
